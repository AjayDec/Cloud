{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.1",
  "parameters": {
    "vnetID": {
      "type":"string"
    },
    "resourceAPIVersion":{
      "type":"string"
    },
    "dnsNamePrefix": {
      "type": "string"
    },
    "location": {
      "type": "string"
    },
    "scriptsUri": {
      "type": "string"
    },
    "storageAccount": {
      "type": "object"
    },
    "vmCount": {
      "type": "int"
    },
    "vmSpec": {
      "type": "secureobject"
    },
    "networkSpec": {
      "type": "object"
    },
    "clusterSpec": {
      "type": "object"
    },
    "templateAPIVersion":{
      "type":"string"
    },
    "customImage": {
      "type":"string"
    },
    "customImageOSDiskContainer": {
      "type":"string"
    }
  },
  "variables": {
    "vmName": "[concat(parameters('dnsNamePrefix'), '-dn')]",
    "nicName": "[concat(variables('vmName'), '-nic')]",
    "storageAccountName": "[parameters('storageAccount').prefix]",
    "dataNodesPerAccount": "[parameters('storageAccount').dataNodesPerAccount]",
    "dataDiskSize": "[parameters('storageAccount').dataDiskSize]",
    "dataDisksPerNode": "[parameters('storageAccount').dataDisksPerNode]",    
    "publicIPAddressName": "[concat(variables('vmName'), '-publicIP')]",
    "securityGroupName": "[concat(parameters('dnsNamePrefix'), '-dn-sg')]"
  },
  "resources": [
    {
      "apiVersion": "[parameters('resourceAPIVersion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('securityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH",
            "properties": {
              "description": "Allows SSH traffic",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "HDFS.dn.Web.UI",
            "properties": {
              "description": "Allow HDFS Web UI traffic",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "50075",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          },
          {
            "name": "YARN.nm.Web.UI",
            "properties": {
              "description": "Allow YARN Web UI traffic",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "8042",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 102,
              "direction": "Inbound"
            }
          },
          {
            "name": "YARN.JobHistory.Server",
            "properties": {
              "description": "Allows YARN JobHistory Server traffic",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "19888",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 103,
              "direction": "Inbound"
            }
          },
          {
            "name": "IMPALA.daemon",
            "properties": {
              "description": "Allows communication to Impala daemon",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "25000",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 104,
              "direction": "Inbound"
            }
          },
          {
            "name": "IMPALA.JDBC",
            "properties": {
              "description": "Allows Impala JDBC connection",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "21050",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 105,
              "direction": "Inbound"
            }
          },
          {
            "name": "IMPALA.Shell",
            "properties": {
              "description": "Allows Impala Shell connection",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "21000",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 106,
              "direction": "Inbound"
            }
          },
          {
            "name": "NTP",
            "properties": {
              "description": "Allows NTP traffic",
              "protocol": "Udp",
              "sourcePortRange": "*",
              "destinationPortRange": "123",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 107,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[parameters('resourceAPIVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'), copyIndex())]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('securityGroupName'))]"
      ],
      "copy": {
        "name": "dataNodeNicLoop",
        "count": "[parameters('vmCount')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[concat(parameters('vnetID'), '/subnets/', parameters('networkSpec').virtualNetworkSubnetName)]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('securityGroupName'))]"
        }
      }
    },
    {
      "apiVersion": "[parameters('resourceAPIVersion')]",
      "type": "Microsoft.Resources/deployments",
      "name": "[concat(variables('vmName'), '-disks-', copyIndex())]",
      "copy": {
        "name": "dataNodeDiskLoop",
        "count": "[parameters('vmCount')]"
      },
      "apiVersion": "[parameters('templateAPIVersion')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('scriptsUri'), '/dhcp/dynamic-disks.json')]",
          "contentVersion": "1.0.0.1"
        },
        "parameters": {
          "numDataDisks": {
            "value":"[variables('dataDisksPerNode')]"
          },
          "diskCaching": {
            "value":"None"
          },
          "diskStorageAccountName": {
            "value":"[concat(variables('storageAccountName'), div(copyIndex(),variables('dataNodesPerAccount')))]"
          },
          "diskSizeGB": {
            "value":"[variables('dataDiskSize')]"  
          }, 
          "diskNamePrefix": {
            "value":"[concat(variables('vmName'), copyIndex(), '-')]"  
          }  
        }
      }
    },
    {
      "apiVersion": "[parameters('resourceAPIVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmName'), copyIndex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "dataNodeNicLoop",
        "count": "[parameters('vmCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), copyIndex())]",
        "[concat('Microsoft.Resources/deployments/', variables('vmName'), '-disks-', copyIndex())]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('vmSpec').dataNodeASName)]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSpec').vmSize]"
        },
        "osProfile": {
          "computerName": "[concat(variables('vmName'), copyIndex())]",
          "adminUsername": "[parameters('vmSpec').adminUserName]",
          "adminPassword": "[parameters('vmSpec').adminPassword]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "false"
          }
        },
        "storageProfile": {
          "osDisk":
          {
            "name": "osdisk",
            "osType": "Linux",
            "image": {
                "uri": "[parameters('customImage')]"
            },
            "vhd": {
              "uri": "[concat(parameters('customImageOSDiskContainer'), variables('vmName'), copyIndex(), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": "[reference(concat('Microsoft.Resources/deployments/', variables('vmName'), '-disks-', copyIndex())).outputs.dataDiskArray.value]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'), copyIndex()))]"
            }
          ],
          "inputEndpoints": [
            {
              "enableDirectServerReturn": "False",
              "endpointName": "HDFS.dn.Web.UI",
              "privatePort": 50075,
              "publicPort": 50075,
              "protocol": "tcp"
            },
            {
              "enableDirectServerReturn": "False",
              "endpointName": "YARN.nm.Web.UI",
              "privatePort": 8042,
              "publicPort": 8042,
              "protocol": "tcp"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'), copyIndex(), '/prepareDisks')]",
      "apiVersion": "[parameters('resourceAPIVersion')]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "dataNodeNicLoop",
        "count": "[parameters('vmCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), copyIndex())]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.4",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[concat(parameters('scriptsUri'), '/scripts/prepare-datanode-disks.sh')]",
            "[concat(parameters('scriptsUri'), '/scripts/initialize-node.sh')]"
          ],
          "commandToExecute": "[concat('sh initialize-node.sh \"', parameters('dnsNamePrefix'), '\" \"', concat(variables('vmName'), copyIndex(), '.somelocaltest.domain'), '\" ', parameters('clusterSpec').masterNodeCount, ' ', parameters('clusterSpec').dataNodeCount, ' \"', parameters('vmSpec').adminUserName, '\" ', 'datanode', ' >> /home/$ADMINUSER/initialize-datanode.log 2>&1')]"
        }
      }
    }
  ],
    "outputs": {
        "ipsComputed": {
            "type": "string",
            "value": "[concat(reference(concat(variables('nicName'),'0')).ipConfigurations[0].properties.privateIPAddress,',',  reference(concat(variables('nicName'),'1')).ipConfigurations[0].properties.privateIPAddress,',', reference(concat(variables('nicName'),'2')).ipConfigurations[0].properties.privateIPAddress,',', reference(concat(variables('nicName'),'3')).ipConfigurations[0].properties.privateIPAddress,',', reference(concat(variables('nicName'),'4')).ipConfigurations[0].properties.privateIPAddress,',', reference(concat(variables('nicName'),'5')).ipConfigurations[0].properties.privateIPAddress,',', reference(concat(variables('nicName'),'6')).ipConfigurations[0].properties.privateIPAddress,',', reference(concat(variables('nicName'),'7')).ipConfigurations[0].properties.privateIPAddress,',', reference(concat(variables('nicName'),'8')).ipConfigurations[0].properties.privateIPAddress,',', reference(concat(variables('nicName'),'9')).ipConfigurations[0].properties.privateIPAddress,',', reference(concat(variables('nicName'),'10')).ipConfigurations[0].properties.privateIPAddress,',', reference(concat(variables('nicName'),'11')).ipConfigurations[0].properties.privateIPAddress,',', reference(concat(variables('nicName'),'12')).ipConfigurations[0].properties.privateIPAddress,',', reference(concat(variables('nicName'),'13')).ipConfigurations[0].properties.privateIPAddress,',', reference(concat(variables('nicName'),'14')).ipConfigurations[0].properties.privateIPAddress,',', reference(concat(variables('nicName'),'15')).ipConfigurations[0].properties.privateIPAddress,',', reference(concat(variables('nicName'),'16')).ipConfigurations[0].properties.privateIPAddress,',', reference(concat(variables('nicName'),'17')).ipConfigurations[0].properties.privateIPAddress,',', reference(concat(variables('nicName'),'18')).ipConfigurations[0].properties.privateIPAddress,',', reference(concat(variables('nicName'),'19')).ipConfigurations[0].properties.privateIPAddress,',', reference(concat(variables('nicName'),'20')).ipConfigurations[0].properties.privateIPAddress)]"
        }
    }
}
